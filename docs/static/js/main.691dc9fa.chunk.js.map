{"version":3,"sources":["components/HeaderBar/HeaderBar.js","components/Menu/Menu.js","components/ActionBar/ActionBar.js","components/Content/Content.js","App.js","services/$har.js","serviceWorker.js","services/index.js","index.js"],"names":["HeaderBar","props","react_default","a","createElement","className","Stack","horizontal","href","HELP_KEY","Menu","$har","useService","_React$useState","React","useState","_React$useState2","Object","slicedToArray","uploadEl","setEl","_React$useState3","localStorage","getItem","_React$useState4","hideHelp","setHideHelp","dismissHelp","setItem","exportedHAR","export","actions","name","links","hars","initialSelectedKey","current","files","map","f","res","key","onClick","select","isValid","length","push","content","JSON","stringify","filename","text","element","document","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","download","concat","Date","now","icon","navgroups","examplePrimaryButton","children","Nav","styles","root","width","groups","es","onDrop","acceptedFiles","addFiles","_ref","getRootProps","getInputProps","ref","assign","Label","required","htmlFor","id","title","TeachingBubble","target","primaryButtonProps","secondaryButtonProps","onDismiss","headline","ActionBar","commands","iconProps","iconName","reset","parsed","log","entries","some","e","_resourceType","prepareMock","selection","deleteRows","CommandBar","items","COLUMNS","maxWidth","data","isPadded","isResizable","isCollapsible","onRender","item","request","method","URL","url","pathname","split","filter","Boolean","pop","response","status","Content","selected","setSelected","Selection","onSelectionChanged","getSelection","horizontalAlign","MessageBar","messageBarType","MessageBarType","warning","MarqueeSelection","isDraggingConstrainedToRoot","DetailsList","columns","selectionMode","SelectionMode","multiple","initializeIcons","App","HeaderBar_HeaderBar","Menu_Menu","Content_Content","$apply","_this","this","undefined","indexOf","find","reduce","acc","reader","FileReader","result","onload","parse","_unused","every","readAsText","logs","deleteFile","index","splice","file","pages","paged","rows","r","$id","window","location","hostname","match","registerService","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.691dc9fa.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Stack } from 'office-ui-fabric-react';\n\nimport './HeaderBar.css';\n\nexport function HeaderBar(props) {\n    return (\n        <header className=\"header\">\n            <Stack horizontal>\n                <a href=\"/har-editor\" className=\"ms-StackItem home\"><i className=\"fa fa-home\" />HAR Editor</a>\n                <a href=\"https://github.com/toutpt/har-editor\" className=\"ms-StackItem github\"><i className=\"fa fa-github\" />Fork me on github</a>\n            </Stack>\n        </header>\n    );\n}","import React from \"react\";\nimport { Nav, TeachingBubble } from \"office-ui-fabric-react\";\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport Dropzone from \"react-dropzone\";\nimport \"./Menu.css\";\nimport { useService } from \"use-service\";\n\nconst HELP_KEY = 'har-editor-help';\n\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport function Menu(props) {\n  const $har = useService(\"$har\");\n  const [uploadEl, setEl] = React.useState();\n  const [hideHelp, setHideHelp] = React.useState(localStorage.getItem(HELP_KEY));\n  const dismissHelp = () => {\n    localStorage.setItem(HELP_KEY, 'true');\n    setHideHelp(true);\n  }\n  const exportedHAR = $har.export();\n  const actions = {\n    name: 'Actions',\n    links: [],\n  };\n  const hars = {\n    name: \"HARs\",\n    initialSelectedKey: $har.current && $har.current.name,\n    links: $har.files.map(f => {\n      const res = {\n        key: f.name,\n        name: f.name,\n        onClick: () => $har.select(f)\n      };\n      if (f.isValid) {\n      } else {\n      }\n      return res;\n    })\n  };\n  const hasHARs = hars.links.length > 0;\n  if (hasHARs) {\n    actions.links.push({\n      key: 'export',\n      name: 'Export',\n      onClick: () => {\n        var content = JSON.stringify(exportedHAR);\n        const filename = `har-editor-export-${Date.now()}.har`;\n        download(filename, content);\n      },\n      icon: 'Download',\n    });\n  }\n  const navgroups = [\n    hars,\n    actions,\n  ];\n\n  \n  const examplePrimaryButton = {\n    children: 'OK got it',\n    onClick: dismissHelp\n  };\n  const exampleSecondaryButtonProps = {\n    children: 'Learn more',\n    href: 'http://www.softwareishard.com/blog/har-12-spec/',\n    \n  };\n  return (\n    <div className=\"menu flex\">\n      <Nav styles={{ root: { width: 300 } }} groups={navgroups} />\n      <Dropzone onDrop={acceptedFiles => $har.addFiles(acceptedFiles)}>\n        {({ getRootProps, getInputProps }) => (\n          <section className=\"upload\" ref={setEl}>\n            <div {...getRootProps()} className=\"upload-wrapper\">\n              <Label required htmlFor=\"upload-har\">Upload</Label>\n              <input {...getInputProps()} id=\"upload-har\" />\n              <i className=\"fa fa-upload\" title=\"Upload icon\"/>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n      {uploadEl && !hideHelp && <TeachingBubble\n          target={uploadEl}\n          primaryButtonProps={examplePrimaryButton}\n          secondaryButtonProps={exampleSecondaryButtonProps}\n          onDismiss={() => dismissHelp()}\n          headline=\"You can drag and drop HAR file here\"\n        >\n          HAR files are generated by devtools in network tabs.\n      </TeachingBubble>}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { CommandBar } from \"office-ui-fabric-react\";\nimport { useService } from \"use-service\";\n\nexport function ActionBar(props) {\n  const $har = useService(\"$har\");\n  const logs = $har.current.parsed.log;\n  // React.useEffect(() => {\n  //   debugger;\n  //   // props.selection.onSelectionChange(() => {\n  //   //   debugger;\n  //   // });\n  // }, []);\n\n  const commands = [\n    {\n      key: \"reset\",\n      name: \"Reset\",\n      iconProps: {\n        iconName: \"Undo\"\n      },\n      onClick: () => $har.reset()\n    }\n  ];\n  if (logs.entries.some(e => e._resourceType !== \"xhr\")) {\n    commands.push({\n      key: \"mock-only\",\n      name: \"Keep only XHR and fetch\",\n      iconProps: {\n        iconName: \"DeleteRows\"\n      },\n      onClick: () => $har.prepareMock()\n    });\n  }\n  if (props.selection && props.selection.length > 0) {\n    commands.push({\n      key: \"multi-delete\",\n      name: \"Delete\",\n      iconProps: {\n        iconName: \"Delete\"\n      },\n      onClick: () => {\n        $har.deleteRows(props.selection);\n      }\n    });\n  }\n  return <CommandBar items={commands} />;\n}\n","import React from \"react\";\nimport { Stack } from \"office-ui-fabric-react/lib/Stack\";\nimport {\n  MessageBar,\n  MessageBarType\n} from \"office-ui-fabric-react/lib/MessageBar\";\nimport {\n  DetailsList,\n  Selection,\n  SelectionMode\n} from \"office-ui-fabric-react/lib/DetailsList\";\nimport { MarqueeSelection } from \"office-ui-fabric-react/lib/MarqueeSelection\";\nimport { useService } from \"use-service\";\nimport { ActionBar } from \"../ActionBar/ActionBar\";\nimport \"./Content.css\";\n\nconst COLUMNS = [\n  {\n    key: \"method\",\n    name: \"Method\",\n    maxWidth: 16,\n    data: \"string\",\n    isPadded: true,\n    isResizable: true,\n    isCollapsible: true,\n    // onColumnClick: this._onColumnClick,\n    onRender: item => {\n      return <span>{item.request.method}</span>;\n    }\n  },\n  {\n    key: \"url\",\n    name: \"URL\",\n    data: \"string\",\n    maxWidth: 16,\n    isPadded: true,\n    isResizable: true,\n    isCollapsible: true,\n    onRender: item => {\n      const url = new URL(item.request.url);\n      const name = url.pathname\n        .split(\"/\")\n        .filter(Boolean)\n        .pop();\n      return <span title={item.request.url}>{name}</span>;\n    }\n  },\n  {\n    key: \"status\",\n    name: \"Status\",\n    data: \"string\",\n    maxWidth: 16,\n    isPadded: true,\n    isResizable: true,\n    isCollapsible: true,\n    onRender: item => {\n      return <span>{item.response.status}</span>;\n    }\n  },\n  {\n    key: \"type\",\n    name: \"Type\",\n    data: \"string\",\n    maxWidth: 16,\n    isPadded: true,\n    isResizable: true,\n    isCollapsible: true,\n    onRender: item => {\n      return <span>{item._resourceType}</span>;\n    }\n  }\n];\n\n\nexport function Content(props) {\n  const $har = useService(\"$har\");\n  const [selected, setSelected] = React.useState([]);\n  const [selection] = React.useState(new Selection({\n    onSelectionChanged: () => {\n      setSelected(selection.getSelection());\n    }\n  }));\n  const current = $har.current;\n  if (!current) {\n    return (\n      <Stack horizontalAlign=\"center\" className=\"content\">\n        <MessageBar messageBarType={MessageBarType.warning}>\n          <i className=\"fa fa-warning\" />\n          No content to display.\n        </MessageBar>\n      </Stack>\n    );\n  }\n  const items = current.parsed.log.entries;\n\n  return (\n    <Stack className=\"content\">\n      <ActionBar selection={selected} />\n      <MarqueeSelection\n        selection={selection}\n        isDraggingConstrainedToRoot\n      >\n        <DetailsList\n          selection={selection}\n          items={items}\n          columns={COLUMNS}\n          className=\"list\"\n          selectionMode={SelectionMode.multiple}\n        />\n      </MarqueeSelection>\n      {/* <pre className=\"pre\">{JSON.stringify(current.parsed, null, 2)}</pre> */}\n    </Stack>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { Stack } from \"office-ui-fabric-react\";\nimport { HeaderBar } from './components/HeaderBar';\nimport { Menu } from './components/Menu';\nimport { Content } from './components/Content';\nimport { initializeIcons } from '@uifabric/icons';\n\ninitializeIcons();\n\nfunction App() {\n  return (\n    <Stack>\n      <HeaderBar />\n      <Stack horizontal>\n        <Menu />\n        <Content />\n      </Stack>\n    </Stack>\n  );\n}\n\nexport default App;\n","\nexport function $har($apply) {\n  this.current = undefined;\n  this.files = [];\n  this.select = f => {\n    if (this.files.indexOf(f) !== -1) {\n      this.current = f;\n    }\n  };\n  this.addFiles = files => {\n    const applyIfDone = () => {\n      if (this.files.every(f => f.content !== undefined)) {\n        $apply();\n      }\n    };\n    files\n      .filter(a => !this.files.find(f => a.name === f.name))\n      .reduce((acc, f) => {\n        const reader = new FileReader();\n        const result = {\n          name: f.name\n        };\n        reader.onload = e => {\n          result.content = reader.result;\n          try {\n            result.parsed = JSON.parse(result.content);\n            result.isValid = true;\n            this.current = result;\n          } catch {\n            result.isValid = false;\n          }\n          applyIfDone();\n        };\n        reader.readAsText(f);\n        acc.push(result);\n        return acc;\n      }, this.files);\n    $apply();\n  };\n  /**\n   * prepareMock delete all request which are not XHR\n   */\n  this.prepareMock = () => {\n    const logs = this.current.parsed.log;\n    logs.entries = logs.entries.filter(\n      e => e._resourceType === \"xhr\" || e._resourceType === \"fetch\"\n    );\n    $apply();\n  };\n  this.reset = () => {\n    this.current.parsed = JSON.parse(this.current.content || \"{\");\n    $apply();\n  };\n  this.deleteFile = () => {\n    const index = this.files.indexOf(this.current);\n    this.files.splice(index, 1);\n    $apply();\n  };\n  this.export = () => {\n    return this.files.reduce((acc, file) => {\n      // init\n      if (!file.parsed) {\n        return acc;\n      }\n      if (!acc.log) {\n        acc.log = file.parsed.log;\n      } else {\n        acc.log.pages = acc.log.pages.concat(file.parsed.log.paged);\n        acc.log.entries = acc.log.entries.concat(file.parsed.log.entries);\n      }\n      return acc;\n    }, {});\n  };\n  this.deleteRows = (rows) => {\n    this.current.parsed.log.entries = this.current.parsed.log.entries.filter(r => {\n      return rows.indexOf(r) === -1;\n    });\n    $apply();\n  }\n}\n\n$har.$id = \"$har\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { registerService } from 'use-service';\nimport { $har } from './$har';\n\nexport default function init() {\n    registerService($har);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport services from './services';\nimport * as serviceWorker from './serviceWorker';\n\nservices();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}